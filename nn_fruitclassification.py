# -*- coding: utf-8 -*-
"""NN-Fruitclassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QPIM62P5Rvgqy4O_fRMTsSZMFWzZdGHY
"""

from keras.applications import vgg16
img_rows  = 100
img_cols = 100

model = vgg16.VGG16(weights = 'imagenet', include_top = False, input_shape = (img_rows, img_cols, 3))

for(i,layer) in enumerate(model.layers):
    print(str(i) + " " + layer.__class__.__name__, layer.trainable)

for layer in model.layers:
    layer.trainable = False

for(i, layer) in enumerate(model.layers):
  print(str(i) + " " + layer.__class__.__name__, layer.trainable)

def addTopModel(bottom_model, num_classes, D=256):
	#creates the top or head of the model that will be placed ontop of the bottom layers""""
	top_model = bottom_model.output
	top_model = Flatten(name = "flatten")(top_model)
	top_model = Dense(D, activation = "relu")(top_model)
	top_model = Dropout(0.3)(top_model)
	top_model = Dense(num_classes, activation = "softmax")(top_model)
	return top_model

!pip install keras

from keras.models import Sequential
from keras.layers import Dense, Dropout, Activation, Flatten
from keras.layers import Conv2D, MaxPooling2D, ZeroPadding2D
#from keras.layers.normalization import BatchNormalization
from keras.models import Model

num_classes = 131

FC_Head = addTopModel(model, num_classes)

modelnew = Model(inputs=model.input, outputs=FC_Head)